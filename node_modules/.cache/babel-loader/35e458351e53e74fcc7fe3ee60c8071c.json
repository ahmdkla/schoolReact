{"ast":null,"code":"var _jsxFileName = \"/home/sky4cr/Documents/wellpact/Nana/react-front/src/components/ComponentMount.js\";\nimport React, { Component } from \"react\";\nimport ComponentUnmount from \"./ComponentUnmount\";\nimport ComponentUpdate from \"./ComponentUpdate\";\nexport default class ComponentMount extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      fetch(\"https://api.github.com/users/ahmdkla\").then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          data: data\n        });\n      });\n    };\n\n    this.state = {\n      color: \"red\",\n      text: \"Update\",\n      data: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(ComponentUnmount, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"this color is \", this.state.color), React.createElement(\"p\", {\n      style: {\n        background: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.text !== \"\" && this.state.text, \" \"), React.createElement(\"img\", {\n      src: this.state.data.avatar_url,\n      alt: \"profile_picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(ComponentUpdate, {\n      text: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/sky4cr/Documents/wellpact/Nana/react-front/src/components/ComponentMount.js"],"names":["React","Component","ComponentUnmount","ComponentUpdate","ComponentMount","constructor","props","componentDidMount","fetch","then","response","json","data","setState","state","color","text","render","background","avatar_url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,eAAe,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AACpDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,iBAVmB,GAUC,MAAM;AACxBC,MAAAA,KAAK,CAAC,sCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AAAED,UAAAA,IAAI,EAAEA;AAAR,SAAd;AACD,OANH;AAOD,KAlBkB;;AAGjB,SAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KADI;AAEXC,MAAAA,IAAI,EAAE,QAFK;AAGXJ,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;;AAYDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkB,KAAKH,KAAL,CAAWC,KAA7B,CAFF,EAGE;AAAG,MAAA,KAAK,EAAE;AAAEG,QAAAA,UAAU,EAAE;AAAd,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWE,IAAX,KAAoB,EAApB,IAA0B,KAAKF,KAAL,CAAWE,IADxC,EAC8C,GAD9C,CAHF,EAME;AAAK,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWF,IAAX,CAAgBO,UAA1B;AAAsC,MAAA,GAAG,EAAC,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWE,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD;;AAjCmD","sourcesContent":["import React, { Component } from \"react\";\nimport ComponentUnmount from \"./ComponentUnmount\";\nimport ComponentUpdate from \"./ComponentUpdate\";\n\nexport default class ComponentMount extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      color: \"red\",\n      text: \"Update\",\n      data: {}\n    };\n  }\n\n  componentDidMount = () => {\n    fetch(\"https://api.github.com/users/ahmdkla\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ data: data });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <ComponentUnmount />\n        <p>this color is {this.state.color}</p>\n        <p style={{ background: \"red\" }}>\n          {this.state.text !== \"\" && this.state.text}{\" \"}\n        </p>\n        <img src={this.state.data.avatar_url} alt=\"profile_picture\" />\n        <ComponentUpdate text={this.state.text} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}